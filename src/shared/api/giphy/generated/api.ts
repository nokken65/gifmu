/**
 * Generated by orval v6.19.0 🍺
 * Do not edit manually.
 * Giphy API
 * Giphy API
 * OpenAPI spec version: 1.0
 */
import { request } from '../../request'
import type {
  GetGifById200,
  GetGifsById200,
  GetGifsByIdParams,
  RandomGif200,
  RandomGifParams,
  RandomSticker200,
  RandomStickerParams,
  SearchGifs200,
  SearchGifsParams,
  SearchStickers200,
  SearchStickersParams,
  TranslateGif200,
  TranslateGifParams,
  TranslateSticker200,
  TranslateStickerParams,
  TrendingGifs200,
  TrendingGifsParams,
  TrendingStickers200,
  TrendingStickersParams
} from './api.schemas'

/**
 * A multiget version of the get GIF by ID endpoint.

 * @summary Get GIFs by ID
 */
export const getGifsById = (params?: GetGifsByIdParams) => {
  return request<GetGifsById200>({ url: `/gifs`, method: 'get', params })
}

/**
 * Returns a random GIF, limited by tag. Excluding the tag parameter will return a random GIF from the GIPHY catalog.

 * @summary Random GIF
 */
export const randomGif = (params?: RandomGifParams) => {
  return request<RandomGif200>({ url: `/gifs/random`, method: 'get', params })
}

/**
 * Search all GIPHY GIFs for a word or phrase. Punctuation will be stripped and ignored.  Use a plus or url encode for phrases. Example paul+rudd, ryan+gosling or american+psycho.

 * @summary Search GIFs
 */
export const searchGifs = (params: SearchGifsParams) => {
  return request<SearchGifs200>({ url: `/gifs/search`, method: 'get', params })
}

/**
 * The translate API draws on search, but uses the GIPHY `special sauce` to handle translating from one vocabulary to another. In this case, words and phrases to GIF

 * @summary Translate phrase to GIF
 */
export const translateGif = (params: TranslateGifParams) => {
  return request<TranslateGif200>({
    url: `/gifs/translate`,
    method: 'get',
    params
  })
}

/**
 * Fetch GIFs currently trending online. Hand curated by the GIPHY editorial team.  The data returned mirrors the GIFs showcased on the GIPHY homepage. Returns 25 results by default.

 * @summary Trending GIFs
 */
export const trendingGifs = (params?: TrendingGifsParams) => {
  return request<TrendingGifs200>({
    url: `/gifs/trending`,
    method: 'get',
    params
  })
}

/**
 * Returns a GIF given that GIF's unique ID

 * @summary Get GIF by Id
 */
export const getGifById = (gifId: number) => {
  return request<GetGifById200>({ url: `/gifs/${gifId}`, method: 'get' })
}

/**
 * Returns a random GIF, limited by tag. Excluding the tag parameter will return a random GIF from the GIPHY catalog.

 * @summary Random Sticker
 */
export const randomSticker = (params?: RandomStickerParams) => {
  return request<RandomSticker200>({
    url: `/stickers/random`,
    method: 'get',
    params
  })
}

/**
 * Replicates the functionality and requirements of the classic GIPHY search, but returns animated stickers rather than GIFs.

 * @summary Search Stickers
 */
export const searchStickers = (params: SearchStickersParams) => {
  return request<SearchStickers200>({
    url: `/stickers/search`,
    method: 'get',
    params
  })
}

/**
 * The translate API draws on search, but uses the GIPHY `special sauce` to handle translating from one vocabulary to another. In this case, words and phrases to GIFs.

 * @summary Translate phrase to Sticker
 */
export const translateSticker = (params: TranslateStickerParams) => {
  return request<TranslateSticker200>({
    url: `/stickers/translate`,
    method: 'get',
    params
  })
}

/**
 * Fetch Stickers currently trending online. Hand curated by the GIPHY editorial team. Returns 25 results by default.

 * @summary Trending Stickers
 */
export const trendingStickers = (params?: TrendingStickersParams) => {
  return request<TrendingStickers200>({
    url: `/stickers/trending`,
    method: 'get',
    params
  })
}

export type GetGifsByIdResult = NonNullable<
  Awaited<ReturnType<typeof getGifsById>>
>
export type RandomGifResult = NonNullable<Awaited<ReturnType<typeof randomGif>>>
export type SearchGifsResult = NonNullable<
  Awaited<ReturnType<typeof searchGifs>>
>
export type TranslateGifResult = NonNullable<
  Awaited<ReturnType<typeof translateGif>>
>
export type TrendingGifsResult = NonNullable<
  Awaited<ReturnType<typeof trendingGifs>>
>
export type GetGifByIdResult = NonNullable<
  Awaited<ReturnType<typeof getGifById>>
>
export type RandomStickerResult = NonNullable<
  Awaited<ReturnType<typeof randomSticker>>
>
export type SearchStickersResult = NonNullable<
  Awaited<ReturnType<typeof searchStickers>>
>
export type TranslateStickerResult = NonNullable<
  Awaited<ReturnType<typeof translateSticker>>
>
export type TrendingStickersResult = NonNullable<
  Awaited<ReturnType<typeof trendingStickers>>
>
